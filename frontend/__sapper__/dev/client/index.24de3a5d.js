import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, a as assign, v as validate_slots, e as element, t as text, b as space, c as claim_element, f as children, g as claim_text, h as detach_dev, j as claim_space, k as attr_dev, l as add_location, m as insert_dev, n as append_dev, o as set_input_value, p as listen_dev, q as prevent_default, r as run_all, u as create_component, w as claim_component, x as mount_component, y as get_spread_update, z as get_spread_object, A as transition_in, B as transition_out, C as destroy_component } from './client.06c419df.js';
import Navbar from './Navbar.aed6f94b.js';
import Listings from './Listings.f5a239b8.js';
import './ListingLI.188cc27b.js';
import './AddListing.c52cb8c6.js';

/* src/routes/index.svelte generated by Svelte v3.35.0 */
const file = "src/routes/index.svelte";

// (78:1) {#if !isLoggedIn}
function create_if_block(ctx) {
	let div5;
	let div4;
	let div0;
	let h1;
	let t0;
	let t1;
	let p0;
	let strong0;
	let t2;
	let t3;
	let strong1;
	let t4;
	let t5;
	let strong2;
	let t6;
	let t7;
	let strong3;
	let t8;
	let t9;
	let t10;
	let p1;
	let t11;
	let a;
	let t12;
	let t13;
	let t14;
	let div3;
	let h4;
	let t15;
	let t16;
	let form;
	let div1;
	let label0;
	let t17;
	let t18;
	let input0;
	let t19;
	let div2;
	let label1;
	let t20;
	let t21;
	let input1;
	let t22;
	let button;
	let t23;
	let t24;
	let hr;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div5 = element("div");
			div4 = element("div");
			div0 = element("div");
			h1 = element("h1");
			t0 = text("RELM");
			t1 = space();
			p0 = element("p");
			strong0 = element("strong");
			t2 = text("R");
			t3 = text("eal ");
			strong1 = element("strong");
			t4 = text("E");
			t5 = text("state\n\t\t\t\t\t\t");
			strong2 = element("strong");
			t6 = text("L");
			t7 = text("isting ");
			strong3 = element("strong");
			t8 = text("M");
			t9 = text("anager.");
			t10 = space();
			p1 = element("p");
			t11 = text("Designed by ");
			a = element("a");
			t12 = text("Myika Technologies");
			t13 = text(".");
			t14 = space();
			div3 = element("div");
			h4 = element("h4");
			t15 = text("Sign In");
			t16 = space();
			form = element("form");
			div1 = element("div");
			label0 = element("label");
			t17 = text("Email");
			t18 = space();
			input0 = element("input");
			t19 = space();
			div2 = element("div");
			label1 = element("label");
			t20 = text("Password");
			t21 = space();
			input1 = element("input");
			t22 = space();
			button = element("button");
			t23 = text("Sign In");
			t24 = space();
			hr = element("hr");
			this.h();
		},
		l: function claim(nodes) {
			div5 = claim_element(nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div0 = claim_element(div4_nodes, "DIV", { class: true, id: true });
			var div0_nodes = children(div0);
			h1 = claim_element(div0_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "RELM");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			p0 = claim_element(div0_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			strong0 = claim_element(p0_nodes, "STRONG", { class: true });
			var strong0_nodes = children(strong0);
			t2 = claim_text(strong0_nodes, "R");
			strong0_nodes.forEach(detach_dev);
			t3 = claim_text(p0_nodes, "eal ");
			strong1 = claim_element(p0_nodes, "STRONG", { class: true });
			var strong1_nodes = children(strong1);
			t4 = claim_text(strong1_nodes, "E");
			strong1_nodes.forEach(detach_dev);
			t5 = claim_text(p0_nodes, "state\n\t\t\t\t\t\t");
			strong2 = claim_element(p0_nodes, "STRONG", { class: true });
			var strong2_nodes = children(strong2);
			t6 = claim_text(strong2_nodes, "L");
			strong2_nodes.forEach(detach_dev);
			t7 = claim_text(p0_nodes, "isting ");
			strong3 = claim_element(p0_nodes, "STRONG", { class: true });
			var strong3_nodes = children(strong3);
			t8 = claim_text(strong3_nodes, "M");
			strong3_nodes.forEach(detach_dev);
			t9 = claim_text(p0_nodes, "anager.");
			p0_nodes.forEach(detach_dev);
			t10 = claim_space(div0_nodes);
			p1 = claim_element(div0_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t11 = claim_text(p1_nodes, "Designed by ");
			a = claim_element(p1_nodes, "A", { href: true, class: true });
			var a_nodes = children(a);
			t12 = claim_text(a_nodes, "Myika Technologies");
			a_nodes.forEach(detach_dev);
			t13 = claim_text(p1_nodes, ".");
			p1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t14 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true, id: true });
			var div3_nodes = children(div3);
			h4 = claim_element(div3_nodes, "H4", { class: true });
			var h4_nodes = children(h4);
			t15 = claim_text(h4_nodes, "Sign In");
			h4_nodes.forEach(detach_dev);
			t16 = claim_space(div3_nodes);
			form = claim_element(div3_nodes, "FORM", { class: true });
			var form_nodes = children(form);
			div1 = claim_element(form_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			label0 = claim_element(div1_nodes, "LABEL", { for: true, class: true });
			var label0_nodes = children(label0);
			t17 = claim_text(label0_nodes, "Email");
			label0_nodes.forEach(detach_dev);
			t18 = claim_space(div1_nodes);

			input0 = claim_element(div1_nodes, "INPUT", {
				type: true,
				class: true,
				id: true,
				placeholder: true
			});

			div1_nodes.forEach(detach_dev);
			t19 = claim_space(form_nodes);
			div2 = claim_element(form_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			label1 = claim_element(div2_nodes, "LABEL", { for: true, class: true });
			var label1_nodes = children(label1);
			t20 = claim_text(label1_nodes, "Password");
			label1_nodes.forEach(detach_dev);
			t21 = claim_space(div2_nodes);

			input1 = claim_element(div2_nodes, "INPUT", {
				type: true,
				class: true,
				id: true,
				placeholder: true
			});

			div2_nodes.forEach(detach_dev);
			t22 = claim_space(form_nodes);
			button = claim_element(form_nodes, "BUTTON", { type: true, class: true });
			var button_nodes = children(button);
			t23 = claim_text(button_nodes, "Sign In");
			button_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t24 = claim_space(nodes);
			hr = claim_element(nodes, "HR", { class: true });
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "brand section-head svelte-113p2a0");
			add_location(h1, file, 81, 5, 1716);
			attr_dev(strong0, "class", "svelte-113p2a0");
			add_location(strong0, file, 83, 6, 1772);
			attr_dev(strong1, "class", "svelte-113p2a0");
			add_location(strong1, file, 83, 28, 1794);
			attr_dev(strong2, "class", "svelte-113p2a0");
			add_location(strong2, file, 84, 6, 1824);
			attr_dev(strong3, "class", "svelte-113p2a0");
			add_location(strong3, file, 84, 31, 1849);
			attr_dev(p0, "class", "svelte-113p2a0");
			add_location(p0, file, 82, 5, 1762);
			attr_dev(a, "href", "https://myika.co");
			attr_dev(a, "class", "svelte-113p2a0");
			add_location(a, file, 87, 18, 1912);
			attr_dev(p1, "class", "svelte-113p2a0");
			add_location(p1, file, 86, 5, 1890);
			attr_dev(div0, "class", "col-sm col-md-7 svelte-113p2a0");
			attr_dev(div0, "id", "info-col");
			add_location(div0, file, 80, 4, 1667);
			attr_dev(h4, "class", "section-head svelte-113p2a0");
			add_location(h4, file, 93, 5, 2053);
			attr_dev(label0, "for", "email");
			attr_dev(label0, "class", "form-label svelte-113p2a0");
			add_location(label0, file, 96, 7, 2182);
			attr_dev(input0, "type", "email");
			attr_dev(input0, "class", "form-control svelte-113p2a0");
			attr_dev(input0, "id", "email");
			attr_dev(input0, "placeholder", "name@agency.com");
			add_location(input0, file, 97, 7, 2242);
			attr_dev(div1, "class", "mb-3");
			add_location(div1, file, 95, 6, 2156);
			attr_dev(label1, "for", "password");
			attr_dev(label1, "class", "form-label svelte-113p2a0");
			add_location(label1, file, 106, 7, 2448);
			attr_dev(input1, "type", "text");
			attr_dev(input1, "class", "form-control svelte-113p2a0");
			attr_dev(input1, "id", "password");
			attr_dev(input1, "placeholder", "password");
			add_location(input1, file, 109, 7, 2530);
			attr_dev(div2, "class", "mb-3");
			add_location(div2, file, 105, 6, 2422);
			attr_dev(button, "type", "submit");
			attr_dev(button, "class", "svelte-113p2a0");
			add_location(button, file, 117, 6, 2708);
			attr_dev(form, "class", "form svelte-113p2a0");
			add_location(form, file, 94, 5, 2096);
			attr_dev(div3, "class", "col-sm col-md-5 svelte-113p2a0");
			attr_dev(div3, "id", "login-col");
			add_location(div3, file, 92, 4, 2003);
			attr_dev(div4, "class", "row");
			add_location(div4, file, 79, 3, 1645);
			attr_dev(div5, "class", "container");
			add_location(div5, file, 78, 2, 1618);
			attr_dev(hr, "class", "svelte-113p2a0");
			add_location(hr, file, 122, 2, 2792);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div5, anchor);
			append_dev(div5, div4);
			append_dev(div4, div0);
			append_dev(div0, h1);
			append_dev(h1, t0);
			append_dev(div0, t1);
			append_dev(div0, p0);
			append_dev(p0, strong0);
			append_dev(strong0, t2);
			append_dev(p0, t3);
			append_dev(p0, strong1);
			append_dev(strong1, t4);
			append_dev(p0, t5);
			append_dev(p0, strong2);
			append_dev(strong2, t6);
			append_dev(p0, t7);
			append_dev(p0, strong3);
			append_dev(strong3, t8);
			append_dev(p0, t9);
			append_dev(div0, t10);
			append_dev(div0, p1);
			append_dev(p1, t11);
			append_dev(p1, a);
			append_dev(a, t12);
			append_dev(p1, t13);
			append_dev(div4, t14);
			append_dev(div4, div3);
			append_dev(div3, h4);
			append_dev(h4, t15);
			append_dev(div3, t16);
			append_dev(div3, form);
			append_dev(form, div1);
			append_dev(div1, label0);
			append_dev(label0, t17);
			append_dev(div1, t18);
			append_dev(div1, input0);
			set_input_value(input0, /*userLogin*/ ctx[1].email);
			append_dev(form, t19);
			append_dev(form, div2);
			append_dev(div2, label1);
			append_dev(label1, t20);
			append_dev(div2, t21);
			append_dev(div2, input1);
			set_input_value(input1, /*userLogin*/ ctx[1].password);
			append_dev(form, t22);
			append_dev(form, button);
			append_dev(button, t23);
			insert_dev(target, t24, anchor);
			insert_dev(target, hr, anchor);

			if (!mounted) {
				dispose = [
					listen_dev(input0, "input", /*input0_input_handler*/ ctx[4]),
					listen_dev(input1, "input", /*input1_input_handler*/ ctx[5]),
					listen_dev(form, "submit", prevent_default(/*signIn*/ ctx[3]), false, true, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*userLogin*/ 2 && input0.value !== /*userLogin*/ ctx[1].email) {
				set_input_value(input0, /*userLogin*/ ctx[1].email);
			}

			if (dirty & /*userLogin*/ 2 && input1.value !== /*userLogin*/ ctx[1].password) {
				set_input_value(input1, /*userLogin*/ ctx[1].password);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div5);
			if (detaching) detach_dev(t24);
			if (detaching) detach_dev(hr);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(78:1) {#if !isLoggedIn}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let main;
	let navbar;
	let t0;
	let t1;
	let listings;
	let current;
	const navbar_spread_levels = [/*user*/ ctx[0]];
	let navbar_props = {};

	for (let i = 0; i < navbar_spread_levels.length; i += 1) {
		navbar_props = assign(navbar_props, navbar_spread_levels[i]);
	}

	navbar = new Navbar({ props: navbar_props, $$inline: true });
	let if_block = !/*isLoggedIn*/ ctx[2] && create_if_block(ctx);
	const listings_spread_levels = [/*user*/ ctx[0]];
	let listings_props = {};

	for (let i = 0; i < listings_spread_levels.length; i += 1) {
		listings_props = assign(listings_props, listings_spread_levels[i]);
	}

	listings = new Listings({ props: listings_props, $$inline: true });

	const block = {
		c: function create() {
			main = element("main");
			create_component(navbar.$$.fragment);
			t0 = space();
			if (if_block) if_block.c();
			t1 = space();
			create_component(listings.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			main = claim_element(nodes, "MAIN", {});
			var main_nodes = children(main);
			claim_component(navbar.$$.fragment, main_nodes);
			t0 = claim_space(main_nodes);
			if (if_block) if_block.l(main_nodes);
			t1 = claim_space(main_nodes);
			claim_component(listings.$$.fragment, main_nodes);
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(main, file, 74, 0, 1567);
		},
		m: function mount(target, anchor) {
			insert_dev(target, main, anchor);
			mount_component(navbar, main, null);
			append_dev(main, t0);
			if (if_block) if_block.m(main, null);
			append_dev(main, t1);
			mount_component(listings, main, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const navbar_changes = (dirty & /*user*/ 1)
			? get_spread_update(navbar_spread_levels, [get_spread_object(/*user*/ ctx[0])])
			: {};

			navbar.$set(navbar_changes);

			if (!/*isLoggedIn*/ ctx[2]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(main, t1);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			const listings_changes = (dirty & /*user*/ 1)
			? get_spread_update(listings_spread_levels, [get_spread_object(/*user*/ ctx[0])])
			: {};

			listings.$set(listings_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(navbar.$$.fragment, local);
			transition_in(listings.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(navbar.$$.fragment, local);
			transition_out(listings.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(main);
			destroy_component(navbar);
			if (if_block) if_block.d();
			destroy_component(listings);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let isLoggedIn;
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Routes", slots, []);

	let mockListingsAgent = [
		{
			name: "Taman Jesselton",
			address: "49, Taman Jesselton, 10450 Georgetown",
			propertyType: "Landed",
			listingType: "Rent",
			price: "6000",
			isPublic: true,
			isCompleted: false
		},
		{
			name: "The Cove",
			address: "10-55-A, The Cove, 11200 Tanjung Tokong",
			propertyType: "Apartment",
			listingType: "Buy",
			price: "3000000",
			isPublic: true,
			isCompleted: false
		},
		{
			name: "Skyhome Condo",
			address: "1-3-7A Skyhome, Jalan Lembah Permai 4, 11200 Tanjung Tokong",
			propertyType: "Apartment",
			listingType: "Rental",
			price: "4500",
			isPublic: false,
			isCompleted: false
		},
		{
			name: "Mansion Five",
			address: "No. 8 Solok Peirce, 10350 Georgetown",
			propertyType: "Landed",
			listingType: "Buy",
			price: "12000000",
			isPublic: true,
			isCompleted: true
		}
	];

	//set when user logs in
	let user = {
		// id: "AGENT", //TEMP
		// listings: mockListingsAgent, //TEMP
		id: "", //TEMP
		listings: mockListingsAgent.filter(l => l.isPublic), //TEMP
		
	};

	let userLogin = { email: "", password: "" };

	function signIn(e) {
		if (userLogin.email === "agent@agent.com" && userLogin.password === "agent") {
			$$invalidate(0, user.id = "AGENT", user);
			$$invalidate(0, user.listings = mockListingsAgent, user);
		} else if (userLogin.email === "owner@owner.com" && userLogin.password === "owner") {
			$$invalidate(0, user.id = "OWNER", user);
		}
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	function input0_input_handler() {
		userLogin.email = this.value;
		$$invalidate(1, userLogin);
	}

	function input1_input_handler() {
		userLogin.password = this.value;
		$$invalidate(1, userLogin);
	}

	$$self.$capture_state = () => ({
		Navbar,
		Listings,
		mockListingsAgent,
		user,
		userLogin,
		signIn,
		isLoggedIn
	});

	$$self.$inject_state = $$props => {
		if ("mockListingsAgent" in $$props) mockListingsAgent = $$props.mockListingsAgent;
		if ("user" in $$props) $$invalidate(0, user = $$props.user);
		if ("userLogin" in $$props) $$invalidate(1, userLogin = $$props.userLogin);
		if ("isLoggedIn" in $$props) $$invalidate(2, isLoggedIn = $$props.isLoggedIn);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*user*/ 1) {
			$$invalidate(2, isLoggedIn = user.id !== "" && user.id !== undefined);
		}
	};

	return [
		user,
		userLogin,
		isLoggedIn,
		signIn,
		input0_input_handler,
		input1_input_handler
	];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
